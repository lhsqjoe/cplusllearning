变量提供一个具名的、可供程序操作的存储空间。C++ 中的每个变量都有其数据类型，数据类型决定着变量所占内存空间的大小和布局方式、
该空间能存储的值的范围，以及变量能参与的运算。
通常情况下，对象是指一块能存储数据并具有某种类型的内存空间。


在同一条定义语句中，可以用先定义的变量值去初始化后定义的其他变量。
C++语言中初始化和赋值是两个完全不同的操作。

如下：不同的初始化形式
int units_sold = 0;
int units_sold = {0};//c++11 
int units_sold{0};
int units_sold(0);
注意：{} 列表初始化有一个弊端，当用户内置类型的变量时，如果初始值存在丢失信息的风险，则编译器将报错。
例如：
	long double ld = 3.1415926;
	int a{ld},b={ld};//错误
	int c(ld),d=ld;//正确
默认初始化：
如果内置类型的变量未被显式初始化，它的值由定义的位置决定。定义于任何函数体之外的变量被初始化为0.
定义在函数体内部的不被初始化。